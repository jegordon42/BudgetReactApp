[{"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/index.js":"1","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/reportWebVitals.js":"2","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/App.js":"3","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Dashboard.js":"4","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Login.js":"5","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Header.js":"6","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/SignUp.js":"7","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Settings.js":"8","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Metrics.js":"9","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Compared.js":"10","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Transactions.js":"11","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieButtons.js":"12","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieChart.js":"13","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarChart.js":"14","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/TransactionsGrid.js":"15","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/ImportTransaction.js":"16"},{"size":500,"mtime":1610911852318,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610911852319,"results":"19","hashOfConfig":"18"},{"size":2533,"mtime":1610911852308,"results":"20","hashOfConfig":"18"},{"size":4715,"mtime":1610911852309,"results":"21","hashOfConfig":"18"},{"size":4872,"mtime":1611011999191,"results":"22","hashOfConfig":"18"},{"size":1144,"mtime":1610911852316,"results":"23","hashOfConfig":"18"},{"size":4989,"mtime":1611012015304,"results":"24","hashOfConfig":"18"},{"size":6826,"mtime":1611012046332,"results":"25","hashOfConfig":"18"},{"size":936,"mtime":1610911852313,"results":"26","hashOfConfig":"18"},{"size":3292,"mtime":1610911852311,"results":"27","hashOfConfig":"18"},{"size":1555,"mtime":1610911852315,"results":"28","hashOfConfig":"18"},{"size":2310,"mtime":1610911852314,"results":"29","hashOfConfig":"18"},{"size":2846,"mtime":1610911852314,"results":"30","hashOfConfig":"18"},{"size":5726,"mtime":1610911852310,"results":"31","hashOfConfig":"18"},{"size":5709,"mtime":1611012056157,"results":"32","hashOfConfig":"18"},{"size":3016,"mtime":1611012032813,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1rna1u9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/index.js",[],["74","75"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/reportWebVitals.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/App.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Dashboard.js",["76","77"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Settings from './DashboardComponents/Settings'\nimport PieChart from './DashboardComponents/PieChart'\nimport PieButtons from './DashboardComponents/PieButtons'\nimport BarChart from './DashboardComponents/BarChart'\nimport Transactions from './DashboardComponents/Transactions'\nimport Metrics from './DashboardComponents/Metrics'\nimport Compared from './DashboardComponents/Compared'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin:10\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [pieKey, setPieKey] = useState(1)\n  const [barKey, setBarKey] = useState(1)\n  const [gridKey, setGridKey] = useState(1)\n  const [pieIncomeExpenseButton, setPieIncomeExpenseButton] = useState(0)\n  const [pieActualPlannedButton, setPieActualPlannedButton] = useState(props.expenseTransactions.length == 0 ? 1 : 0)\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Paper className={classes.paper} style={{height:'500'}}>\n            <BarChart\n              barKey = {barKey}\n              setBarKey = {setBarKey}\n              expenseCategories = {props.expenseCategories}\n              incomeCategories = {props.incomeCategories}\n              expenseTransactions = {props.expenseTransactions}\n              incomeTransactions = {props.incomeTransactions}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={5}>\n          <Paper className={classes.paper}>\n            <Metrics \n              expenseTransactions = {props.expenseTransactions}\n              incomeTransactions = {props.incomeTransactions}\n              expenseCategories = {props.expenseCategories}\n              incomeCategories = {props.incomeCategories}\n            />\n          </Paper>\n          <br/>\n          <Paper className={classes.paper} style={{display:'flex', flexDirection:'column', minHeight:'200' }}> \n            <PieButtons\n              pieKey = {pieKey}\n              setPieKey = {setPieKey}\n              pieIncomeExpenseButton = {pieIncomeExpenseButton}\n              setPieIncomeExpenseButton = {setPieIncomeExpenseButton}\n              pieActualPlannedButton = {pieActualPlannedButton}\n              setPieActualPlannedButton = {setPieActualPlannedButton}\n            />\n           {pieActualPlannedButton != 2 && (\n              <PieChart\n                pieKey = {pieKey}\n                pieIncomeExpenseButton = {pieIncomeExpenseButton}\n                pieActualPlannedButton = {pieActualPlannedButton}\n                incomeCategories = {props.incomeCategories}\n                expenseCategories = {props.expenseCategories}\n                expenseTransactions = {props.expenseTransactions}\n                incomeTransactions = {props.incomeTransactions}\n              />\n          )}\n          {pieActualPlannedButton === 2 && (\n            <Compared\n              pieIncomeExpenseButton = {pieIncomeExpenseButton}\n              incomeCategories = {props.incomeCategories}\n              expenseCategories = {props.expenseCategories}\n              expenseTransactions = {props.expenseTransactions}\n              incomeTransactions = {props.incomeTransactions}\n            />\n          )}\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>  \n            <Transactions \n              user = {props.user}\n              gridKey = {gridKey}\n              expenseTransactions = {props.expenseTransactions}\n              setExpenseTransactions = {props.setExpenseTransactions}\n              incomeTransactions = {props.incomeTransactions}\n              setIncomeTransactions = {props.setIncomeTransactions}\n              expenseCategories = {props.expenseCategories}\n              incomeCategories = {props.incomeCategories}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Settings \n        show={props.showSettings} \n        user={props.user}\n        incomeTransactions={props.incomeTransactions}\n        expenseTransactions={props.expenseTransactions}\n        expenseCategories={props.expenseCategories} \n        setExpenseCategories = {props.setExpenseCategories}\n        incomeCategories = {props.incomeCategories}\n        setIncomeCategories = {props.setIncomeCategories}\n        handleClose={() => {props.setShowSettings(false); setGridKey(gridKey + 1)}}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Login.js",["78","79","80"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Header.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/SignUp.js",["81","82","83","84"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Settings.js",["85","86","87"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Metrics.js",["88"],"import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Metrics(props) {\n\n  function getTotalSpent(){\n    var total = 0;\n    for(var i = 0; i < props.expenseTransactions.length; i++){\n      total += props.expenseTransactions[i].Amount;\n    }\n    return total;\n  }\n  \n  function getPlannedSpending(){\n    var total = 0;\n    for(var i = 0; i < props.expenseCategories.length; i++){\n      total += props.expenseCategories[i].Planned;\n    }\n    return total;\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={4}>\n        <h1>${getPlannedSpending()}</h1>\n        <h6>Planned Spending</h6>\n      </Grid>\n      <Grid item xs={4}>\n        <h1>${getTotalSpent()}</h1>\n        <h6>Total Spent</h6>\n      </Grid>\n      <Grid item xs={4}>\n        <h1>${(getPlannedSpending() - getTotalSpent()).toFixed(2)}</h1>\n        <h6>Saved</h6>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Metrics;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Compared.js",["89","90","91","92","93","94","95"],"import React, {useState} from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  Chart,\n  ChartTitle,\n  ChartTooltip,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartValueAxis,\n  ChartValueAxisItem\n} from '@progress/kendo-react-charts';\n\nfunction Compared(props) {\n\n  const tooltipRender = ({ point }) => {\n    const { value } = point;\n\n    return (\n      <span>\n        Planned: ${ value.target }\n        <br />\n        Actual: ${ value.current }\n        <br />\n        Diff: ${ value.target - value.current }\n      </span>\n    )\n  };\n\n  function getActualAmount(transactions, categoryId){\n    var total = 0;\n    for(var i = 0; i < transactions.length; i++){\n      if(transactions[i].CategoryId == categoryId){\n        total += transactions[i].Amount;\n      }\n    }\n    return total;\n  }\n\n  return (\n    <div style={{height:240, overflow: 'scroll'}}>\n      {props.pieIncomeExpenseButton === 0 && props.expenseCategories.map((category) => {\n        var actualAmount = getActualAmount(props.expenseTransactions, category.CategoryId);\n        var max = actualAmount < category.Planned ? category.Planned * 2 : ((actualAmount / category.Planned) + 1) * category.Planned\n        return (\n          <Chart style={{ height: 80 }}>\n            <ChartTitle text={category.CategoryName} align=\"left\"/>\n            <ChartSeries >\n                <ChartSeriesItem type=\"bullet\" color=\"#4361EE\" data={[[actualAmount, category.Planned]]} />\n            </ChartSeries>\n            <ChartValueAxis>\n              <ChartValueAxisItem \n                majorGridLines={{ visible: false }} \n                minorTicks={{ visible: false }} \n                min={0} \n                max={max} \n                labels={{format: \"${0}\"}} \n                plotBands={[{from: 0, to: category.Planned, color: 'lightgreen', opacity: .3}, {from: category.Planned, to: max, color: '#FFC6FF', opacity: .2}]} \n              />\n            </ChartValueAxis>\n            <ChartTooltip render={tooltipRender} background=\"white\"/>\n          </Chart>)\n        })}\n      {props.pieIncomeExpenseButton === 1 && props.incomeCategories.map((category) => {\n        var actualAmount = getActualAmount(props.incomeTransactions, category.CategoryId);\n        var max = actualAmount < category.Planned ? category.Planned * 2 : ((actualAmount / category.Planned) + 1) * category.Planned\n        return (\n          <Chart style={{ height: 80 }}>\n            <ChartTitle text={category.CategoryName} align=\"left\"/>\n            <ChartSeries >\n                <ChartSeriesItem type=\"bullet\" color=\"#4361EE\" data={[[actualAmount, category.Planned]]} />\n            </ChartSeries>\n            <ChartValueAxis>\n              <ChartValueAxisItem \n                majorGridLines={{ visible: false }} \n                minorTicks={{ visible: false }} \n                min={0} \n                max={max} \n                labels={{format: \"${0}\"}} \n                plotBands={[{from: 0, to: category.Planned, color: '#FFC6FF', opacity: .3}, {from: category.Planned, to: max, color: 'lightgreen', opacity: .2}]}\n              />\n            </ChartValueAxis>\n            <ChartTooltip render={tooltipRender} background=\"white\"/>\n          </Chart>)\n        })}\n    </div>\n  );\n}\n\nexport default Compared;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Transactions.js",["96"],"import React, {useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TransactionsGrid from './TransactionsGrid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Transactions(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={4}></Grid>\n      <Grid item xs={4}><h3 style={{margin:0}}>Transactions</h3></Grid>\n      <Grid item xs={4}></Grid>\n\n      <Grid item xs={6}>\n        <Paper className={classes.paper}>\n          <TransactionsGrid \n            user = {props.user}\n            gridKey = {props.gridKey}\n            TransactionType = \"Expenses\"\n            transactions = {props.expenseTransactions}\n            setTransactions = {props.setExpenseTransactions}\n            categories = {props.expenseCategories}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper className={classes.paper}>\n          <TransactionsGrid \n            user = {props.user}\n            gridKey = {props.gridKey}\n            TransactionType = \"Income\"\n            transactions = {props.incomeTransactions}\n            setTransactions = {props.setIncomeTransactions}\n            categories = {props.incomeCategories}\n          />\n        </Paper>\n      </Grid>\n    </Grid>     \n  );\n}\n\nexport default Transactions;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieButtons.js",["97","98","99","100","101","102","103","104"],"import React, {useState} from 'react';\nimport {ButtonGroup, Button} from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\n\nfunction PieButtons(props) {\n  const pieTitles = [\n    ['Actual Expenses By Category', 'Planned Expenses By Category', 'Actual Vs. Planned Expenses'],\n    ['Actual Income By Category', 'Planned Income By Category', 'Actual Vs. Planned Income']\n  ]\n\n  function handleClick(button, buttonNum){\n    if(button == \"IncomeExpense\"){\n      props.setPieIncomeExpenseButton(buttonNum); \n    }else if(button == \"ActualPlanned\"){\n      props.setPieActualPlannedButton(buttonNum); \n    }\n    props.setPieKey(props.pieKey + 1)\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={7}>\n        <br/>\n        <h5 style={{float:'right'}}>\n          {pieTitles[props.pieIncomeExpenseButton][props.pieActualPlannedButton]}\n        </h5>\n      </Grid>\n      <Grid item xs={5}>\n        <ButtonGroup size=\"sm\" style={{float:'right', marginBottom:2}}>\n          <Button \n            variant=\"success\" \n            active={props.pieIncomeExpenseButton == 0 ? true : false} \n            onClick={() => handleClick(\"IncomeExpense\", 0)}\n          >\n            Expenses\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieIncomeExpenseButton == 1 ? true : false} \n            onClick={() => handleClick(\"IncomeExpense\", 1)}\n          >\n            Income\n          </Button>\n        </ButtonGroup>\n        <ButtonGroup size=\"sm\" style={{float:'right'}}>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 0 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 0)}\n          >\n            Actual\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 1 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 1)}\n          >\n            Planned\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 2 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 2)}\n          >\n            Compared\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PieButtons;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieChart.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, {useState} from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nfunction PieChart(props) {\n\n  function getPieChartData(){\n    var pieLabels = [];\n    var pieData = [];\n\n    var categories = props.pieIncomeExpenseButton == 0 ? props.expenseCategories : props.incomeCategories;\n    var transactions = props.pieIncomeExpenseButton == 0 ? props.expenseTransactions : props.incomeTransactions;\n    for(var i = 0; i < categories.length; i++){\n      pieLabels.push(categories[i].CategoryName)\n      if(props.pieActualPlannedButton == 1){\n        pieData.push(categories[i].Planned)\n      }else if(props.pieActualPlannedButton == 0){\n        pieData.push(0)\n        for(var x = 0; x < transactions.length; x++){\n          if(transactions[x].CategoryId == categories[i].CategoryId){\n            pieData[i] += transactions[x].Amount;\n          }\n        }\n      }\n    }\n\n    var pieChartData = {\n      labels: pieLabels,\n      datasets: [\n        {\n          label: 'Categories',\n          backgroundColor: [\n            '#FFADAD',\n            '#FFD6A5',\n            '#FDFFB6',\n            '#CAFFBF',\n            '#9BF6FF',\n            '#A0C4FF',\n            '#BDB2FF',\n            '#FFC6FF',\n            '#F72585',\n            '#7209B7',\n            '#4361EE'\n          ],\n          data: pieData\n        }\n      ]\n    }\n    return pieChartData\n  }\n\n  return (\n    <div>\n        { ((props.pieIncomeExpenseButton == 0 && props.pieActualPlannedButton == 0 && props.expenseTransactions.length == 0) ||\n          (props.pieIncomeExpenseButton == 1 && props.pieActualPlannedButton == 0 && props.incomeTransactions.length == 0)) && \n          <div style={{height:235}}>\n            <br/><br/><br/>\n            <h1>No Data available</h1>\n          </div>\n        }\n        { (!((props.pieIncomeExpenseButton == 0 && props.pieActualPlannedButton == 0 && props.expenseTransactions.length == 0) ||\n          (props.pieIncomeExpenseButton == 1 && props.pieActualPlannedButton == 0 && props.incomeTransactions.length == 0))) && \n          <Pie\n            height = {235}\n            data={getPieChartData()}\n            options={{\n              animation:{duration:1000, easing:'easeInOutCubic'},\n              maintainAspectRatio:false,\n              legend:{\n                display:true,\n                position:'right'\n              },\n              tooltips: {\n                callbacks: {\n                    label: function(tooltipItem, data) {\n                        var label = data.labels[tooltipItem.index]\n                        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n                        label += ': $' + value;\n                        return label;\n                    }\n                }\n              }\n            }}\n          />\n        }\n       \n    </div>\n  );\n}\n\nexport default PieChart;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarChart.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import React, {useState} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {ButtonGroup, Button} from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\n\nfunction BarChart(props) {\n  const [expenseIncomeButton, setExpenseIncomeButton] = useState(0)\n  const [totalCategoryButton, setTotalCategoryButton] = useState(0)\n  const titles = [['Total Expenses', 'Expenses By Category'],['Total Income', 'Income By Category']]\n  const colors = [\n    '#FFADAD',\n    '#FFD6A5',\n    '#FDFFB6',\n    '#CAFFBF',\n    '#9BF6FF',\n    '#A0C4FF',\n    '#BDB2FF',\n    '#FFC6FF',\n    '#F72585',\n    '#7209B7',\n    '#4361EE'\n  ];\n\n  function getBarChartData(){\n    var transactions = expenseIncomeButton == 0 ? props.expenseTransactions : props.incomeTransactions;\n    \n    if(transactions.length == 0)\n      return {};\n\n    var firstDate = new Date(transactions[0]['Date'])\n    var lastDate = new Date(transactions[0]['Date'])\n    for(var i = 0; i < transactions.length; i++){\n      var curDate = new Date(transactions[i]['Date'])\n      if(curDate < firstDate){\n        firstDate = curDate;\n      }\n      if(curDate > lastDate){\n        lastDate = curDate;\n      }\n    }\n    var labels = []\n    var actualData = []\n    var plannedData = []\n    var datasets = []\n    if(totalCategoryButton == 0){\n      for(var curDate = firstDate; curDate <= lastDate; curDate.setDate(curDate.getDate() + 1)){\n        labels.push(curDate.toLocaleDateString())\n        actualData.push(0)\n        plannedData.push(200)\n      }\n      for(var i = 0; i < transactions.length; i++){\n        var curDate = transactions[i]['Date']\n        var index = labels.indexOf(curDate)\n        actualData[index] += transactions[i]['Amount']\n      }\n      datasets.push({\n        label: 'Total Spending',\n        data: actualData,\n        stack: '1',\n        backgroundColor: '#CAFFBF',\n        borderWidth:0\n      })\n      // datasets.push({\n      //   label: 'Planned Spending',\n      //   data: plannedData,\n      //   stack:'2',\n      //   backgroundColor: '#CAFFBF',\n      //   borderWidth:0\n      // })\n    }else{\n      var categories = expenseIncomeButton == 0 ? props.expenseCategories : props.incomeCategories;\n      var categoryIds = []\n      for(var i = 0; i < categories.length; i++){\n        categoryIds.push(categories[i]['CategoryId'])\n      }\n      for(var i = 0; i <= categories.length; i++){\n        actualData.push([])\n      }\n      for(var curDate = firstDate; curDate <= lastDate; curDate.setDate(curDate.getDate() + 1)){\n        labels.push(curDate.toLocaleDateString())\n        for(var i = 0; i <= categories.length; i++){\n          actualData[i].push(0)\n        }\n      }\n      for(var i = 0; i < transactions.length; i++){\n        var curDate = transactions[i]['Date']\n        var labelIndex = labels.indexOf(curDate)\n        var categoryIndex = categoryIds.indexOf(transactions[i]['CategoryId'])\n        actualData[categoryIndex][labelIndex] += transactions[i]['Amount']\n      }\n      for(var i = 0; i < categories.length; i++){\n        datasets.push({\n          label : categories[i]['CategoryName'],\n          stack:'1',\n          data : actualData[i],\n          backgroundColor : colors[i],\n          borderWidth : 0\n        });\n      }\n    }\n    \n    return {\n      labels: labels,\n      datasets: datasets\n    }\n  }\n\n  function handleClick(button, buttonNum){\n    if(button == \"expenseIncome\"){\n      setExpenseIncomeButton(buttonNum); \n    }else if(button == \"totalCategory\"){\n      setTotalCategoryButton(buttonNum); \n    }\n    props.setBarKey(props.barKey + 1)\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={6}>\n        <br/><br/>\n        <h5 style={{float:'right'}}>{titles[expenseIncomeButton][totalCategoryButton]}</h5>\n      </Grid>\n      <Grid item xs={3}></Grid>\n      <Grid item xs={3}>\n        <ButtonGroup size=\"sm\" style={{float:'right', marginBottom:2}}>\n          <Button variant=\"success\" active={expenseIncomeButton == 0 ? true : false} onClick={() => handleClick(\"expenseIncome\", 0)}>Expenses</Button>\n          <Button variant=\"success\" active={expenseIncomeButton == 1 ? true : false} onClick={() => handleClick(\"expenseIncome\", 1)}>Income</Button>\n        </ButtonGroup>\n        <br/>\n        <ButtonGroup size=\"sm\" style={{float:'right'}}>\n          <Button variant=\"success\" active={totalCategoryButton == 0 ? true : false} onClick={() => handleClick(\"totalCategory\", 0)}>Total</Button>\n          <Button variant=\"success\" active={totalCategoryButton == 1 ? true : false} onClick={() => handleClick(\"totalCategory\", 1)}>By Category</Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={12}>\n        <div>\n          <Bar \n            height = {355}\n            key = {props.barKey}\n            data={getBarChartData}\n            options={{\n              maintainAspectRatio:false,\n              legend:{\n                display:true,\n                position:'right'\n              },\n              scales: {\n                yAxes: [{\n                    ticks: {\n                        callback: function(value, index, values) {\n                            return '$' + value;\n                        }\n                    }\n                }]\n              },\n              tooltips: {\n                callbacks: {\n                    label: function(tooltipItem, data) {\n                        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                        var value = tooltipItem.value;\n\n                        label += ': $' + value;\n                        return label;\n                    }\n                }\n            }\n            }}\n          />\n        </div>\n        \n      </Grid>\n    </Grid>        \n  );\n}\n\nexport default BarChart;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/TransactionsGrid.js",["143","144","145","146"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/ImportTransaction.js",["147","148","149","150","151","152","153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":31,"column":105,"nodeType":"161","messageId":"162","endLine":31,"endColumn":107},{"ruleId":"159","severity":1,"message":"163","line":67,"column":36,"nodeType":"161","messageId":"162","endLine":67,"endColumn":38},{"ruleId":"159","severity":1,"message":"160","line":59,"column":30,"nodeType":"161","messageId":"162","endLine":59,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":73,"column":19,"nodeType":"166","messageId":"167","endLine":73,"endColumn":20},{"ruleId":"164","severity":1,"message":"168","line":74,"column":17,"nodeType":"166","messageId":"167","endLine":74,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":6,"column":8,"nodeType":"166","messageId":"171","endLine":6,"endColumn":24},{"ruleId":"169","severity":1,"message":"172","line":7,"column":8,"nodeType":"166","messageId":"171","endLine":7,"endColumn":16},{"ruleId":"169","severity":1,"message":"173","line":15,"column":10,"nodeType":"166","messageId":"171","endLine":15,"endColumn":39},{"ruleId":"159","severity":1,"message":"160","line":61,"column":30,"nodeType":"161","messageId":"162","endLine":61,"endColumn":32},{"ruleId":"169","severity":1,"message":"174","line":11,"column":12,"nodeType":"166","messageId":"171","endLine":11,"endColumn":19},{"ruleId":"169","severity":1,"message":"175","line":12,"column":12,"nodeType":"166","messageId":"171","endLine":12,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":51,"column":38,"nodeType":"161","messageId":"162","endLine":51,"endColumn":40},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"169","severity":1,"message":"177","line":2,"column":13,"nodeType":"166","messageId":"171","endLine":2,"endColumn":21},{"ruleId":"169","severity":1,"message":"178","line":9,"column":3,"nodeType":"166","messageId":"171","endLine":9,"endColumn":20},{"ruleId":"169","severity":1,"message":"179","line":10,"column":3,"nodeType":"166","messageId":"171","endLine":10,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":34,"column":37,"nodeType":"161","messageId":"162","endLine":34,"endColumn":39},{"ruleId":"180","severity":1,"message":"181","line":58,"column":34,"nodeType":"182","messageId":"183","endLine":58,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":80,"column":34,"nodeType":"182","messageId":"183","endLine":80,"endColumn":40},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":12,"column":15,"nodeType":"161","messageId":"162","endLine":12,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":14,"column":21,"nodeType":"161","messageId":"162","endLine":14,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":32,"column":50,"nodeType":"161","messageId":"162","endLine":32,"endColumn":52},{"ruleId":"159","severity":1,"message":"160","line":39,"column":50,"nodeType":"161","messageId":"162","endLine":39,"endColumn":52},{"ruleId":"159","severity":1,"message":"160","line":48,"column":50,"nodeType":"161","messageId":"162","endLine":48,"endColumn":52},{"ruleId":"159","severity":1,"message":"160","line":55,"column":50,"nodeType":"161","messageId":"162","endLine":55,"endColumn":52},{"ruleId":"159","severity":1,"message":"160","line":62,"column":50,"nodeType":"161","messageId":"162","endLine":62,"endColumn":52},{"ruleId":"169","severity":1,"message":"176","line":1,"column":16,"nodeType":"166","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":10,"column":51,"nodeType":"161","messageId":"162","endLine":10,"endColumn":53},{"ruleId":"159","severity":1,"message":"160","line":11,"column":53,"nodeType":"161","messageId":"162","endLine":11,"endColumn":55},{"ruleId":"159","severity":1,"message":"160","line":14,"column":39,"nodeType":"161","messageId":"162","endLine":14,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":16,"column":45,"nodeType":"161","messageId":"162","endLine":16,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":19,"column":41,"nodeType":"161","messageId":"162","endLine":19,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":53,"column":42,"nodeType":"161","messageId":"162","endLine":53,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":53,"column":79,"nodeType":"161","messageId":"162","endLine":53,"endColumn":81},{"ruleId":"159","severity":1,"message":"160","line":53,"column":120,"nodeType":"161","messageId":"162","endLine":53,"endColumn":122},{"ruleId":"159","severity":1,"message":"160","line":54,"column":41,"nodeType":"161","messageId":"162","endLine":54,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":54,"column":78,"nodeType":"161","messageId":"162","endLine":54,"endColumn":80},{"ruleId":"159","severity":1,"message":"160","line":54,"column":118,"nodeType":"161","messageId":"162","endLine":54,"endColumn":120},{"ruleId":"159","severity":1,"message":"160","line":60,"column":44,"nodeType":"161","messageId":"162","endLine":60,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":60,"column":81,"nodeType":"161","messageId":"162","endLine":60,"endColumn":83},{"ruleId":"159","severity":1,"message":"160","line":60,"column":122,"nodeType":"161","messageId":"162","endLine":60,"endColumn":124},{"ruleId":"159","severity":1,"message":"160","line":61,"column":41,"nodeType":"161","messageId":"162","endLine":61,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":61,"column":78,"nodeType":"161","messageId":"162","endLine":61,"endColumn":80},{"ruleId":"159","severity":1,"message":"160","line":61,"column":118,"nodeType":"161","messageId":"162","endLine":61,"endColumn":120},{"ruleId":"159","severity":1,"message":"160","line":25,"column":44,"nodeType":"161","messageId":"162","endLine":25,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":27,"column":28,"nodeType":"161","messageId":"162","endLine":27,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":45,"column":28,"nodeType":"161","messageId":"162","endLine":45,"endColumn":30},{"ruleId":"164","severity":1,"message":"184","line":46,"column":15,"nodeType":"166","messageId":"167","endLine":46,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":51,"column":15,"nodeType":"166","messageId":"167","endLine":51,"endColumn":16},{"ruleId":"164","severity":1,"message":"184","line":52,"column":13,"nodeType":"166","messageId":"167","endLine":52,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":71,"column":44,"nodeType":"161","messageId":"162","endLine":71,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":73,"column":15,"nodeType":"166","messageId":"167","endLine":73,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":76,"column":15,"nodeType":"166","messageId":"167","endLine":76,"endColumn":16},{"ruleId":"164","severity":1,"message":"184","line":79,"column":15,"nodeType":"166","messageId":"167","endLine":79,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":81,"column":17,"nodeType":"166","messageId":"167","endLine":81,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":85,"column":15,"nodeType":"166","messageId":"167","endLine":85,"endColumn":16},{"ruleId":"164","severity":1,"message":"184","line":86,"column":13,"nodeType":"166","messageId":"167","endLine":86,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":91,"column":15,"nodeType":"166","messageId":"167","endLine":91,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":109,"column":15,"nodeType":"161","messageId":"162","endLine":109,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":111,"column":21,"nodeType":"161","messageId":"162","endLine":111,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":126,"column":65,"nodeType":"161","messageId":"162","endLine":126,"endColumn":67},{"ruleId":"159","severity":1,"message":"160","line":127,"column":65,"nodeType":"161","messageId":"162","endLine":127,"endColumn":67},{"ruleId":"159","severity":1,"message":"160","line":131,"column":65,"nodeType":"161","messageId":"162","endLine":131,"endColumn":67},{"ruleId":"159","severity":1,"message":"160","line":132,"column":65,"nodeType":"161","messageId":"162","endLine":132,"endColumn":67},{"ruleId":"169","severity":1,"message":"185","line":8,"column":10,"nodeType":"166","messageId":"171","endLine":8,"endColumn":17},{"ruleId":"169","severity":1,"message":"174","line":11,"column":10,"nodeType":"166","messageId":"171","endLine":11,"endColumn":17},{"ruleId":"169","severity":1,"message":"175","line":12,"column":10,"nodeType":"166","messageId":"171","endLine":12,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":89,"column":34,"nodeType":"161","messageId":"162","endLine":89,"endColumn":36},{"ruleId":"169","severity":1,"message":"186","line":2,"column":17,"nodeType":"166","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"187","line":10,"column":18,"nodeType":"166","messageId":"171","endLine":10,"endColumn":25},{"ruleId":"169","severity":1,"message":"174","line":11,"column":12,"nodeType":"166","messageId":"171","endLine":11,"endColumn":19},{"ruleId":"169","severity":1,"message":"175","line":12,"column":12,"nodeType":"166","messageId":"171","endLine":12,"endColumn":25},{"ruleId":"169","severity":1,"message":"188","line":14,"column":14,"nodeType":"166","messageId":"171","endLine":14,"endColumn":25},{"ruleId":"169","severity":1,"message":"189","line":19,"column":14,"nodeType":"166","messageId":"171","endLine":19,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":22,"column":9,"nodeType":"192","messageId":"193","endLine":26,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":39,"column":13,"nodeType":"196","messageId":"197","endLine":39,"endColumn":33,"fix":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'i' is already defined.","Identifier","redeclared","'date' is already defined.","no-unused-vars","'FormControlLabel' is defined but never used.","unusedVar","'Checkbox' is defined but never used.","'SentimentDissatisfiedOutlined' is defined but never used.","'gridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'ChartCategoryAxis' is defined but never used.","'ChartCategoryAxisItem' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'curDate' is already defined.","'GridApi' is defined but never used.","'Nav' is defined but never used.","'setRows' is assigned a value but never used.","'onGridReady' is defined but never used.","'readFile' is defined but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","no-whitespace-before-property","Unexpected whitespace before property handleClose.","MemberExpression","unexpectedWhitespace",{"range":"201","text":"202"},"no-global-assign","no-unsafe-negation",[1226,1230],"."]