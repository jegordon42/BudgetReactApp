[{"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/index.js":"1","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/reportWebVitals.js":"2","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/App.js":"3","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Header.js":"4","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Login.js":"5","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Error.js":"6","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Dashboard.js":"7","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/SignUp.js":"8","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieChart.js":"9","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarChart.js":"10","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieButtons.js":"11","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Transactions.js":"12","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Compared.js":"13","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Metrics.js":"14","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Settings.js":"15","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/constants.js":"16","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarButtons.js":"17","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/TransactionsGrid.js":"18","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/ImportTransaction.js":"19","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Constants.js":"20"},{"size":500,"mtime":1621588462818,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1621588462818,"results":"23","hashOfConfig":"22"},{"size":4882,"mtime":1625243959729,"results":"24","hashOfConfig":"22"},{"size":1206,"mtime":1621588483881,"results":"25","hashOfConfig":"22"},{"size":4617,"mtime":1625183237105,"results":"26","hashOfConfig":"22"},{"size":742,"mtime":1621588483881,"results":"27","hashOfConfig":"22"},{"size":5636,"mtime":1625182635796,"results":"28","hashOfConfig":"22"},{"size":5871,"mtime":1625177858227,"results":"29","hashOfConfig":"22"},{"size":3002,"mtime":1621588483880,"results":"30","hashOfConfig":"22"},{"size":11588,"mtime":1625244864779,"results":"31","hashOfConfig":"22"},{"size":2807,"mtime":1621588483880,"results":"32","hashOfConfig":"22"},{"size":2124,"mtime":1625182684591,"results":"33","hashOfConfig":"22"},{"size":3652,"mtime":1621588483879,"results":"34","hashOfConfig":"22"},{"size":4356,"mtime":1621588483880,"results":"35","hashOfConfig":"22"},{"size":7107,"mtime":1625178193004,"results":"36","hashOfConfig":"22"},{"size":297,"mtime":1621904665177,"results":"37","hashOfConfig":"22"},{"size":6946,"mtime":1621588483879,"results":"38","hashOfConfig":"22"},{"size":8175,"mtime":1625244450154,"results":"39","hashOfConfig":"22"},{"size":5763,"mtime":1625226426768,"results":"40","hashOfConfig":"22"},{"size":336,"mtime":1625183036731,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"25dix4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/index.js",[],["91","92"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/reportWebVitals.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/App.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Header.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Login.js",["93"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Error.js",["94","95","96","97","98"],"import React, {useState} from 'react'\nimport { Modal, Nav, Button } from 'react-bootstrap'\nimport Grid from '@material-ui/core/Grid';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction Error(props) {\n    \n    return (\n    <Modal show={props.show} onHide={props.handleClose}>\n        <Modal.Header>\n            <Modal.Title>OOPSIE!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {props.message}\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={props.handleClose}>Close</Button>\n        </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Error;","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Dashboard.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/SignUp.js",["99","100","101"],"import React, { useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { SentimentDissatisfiedOutlined } from '@material-ui/icons';\nimport * as constants from './Constants'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Joe's Money App\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n  function isValid(){\n      if(firstName === \"\" || lastName === \"\"){\n      setMessage(\"Please Fill in Name Values\");\n      return false;\n    }\n    if (!validateEmail(email)){\n      setMessage(\"Please Enter a Valid Email Address\");\n      return false;\n    }\n    return true;\n  }\n\n  function handleSignUp(){\n    setMessage(\"\");\n    if(!isValid()){\n      return;\n    }\n    fetch(constants.url + 'SignUp?firstName=' + firstName + '&lastName=' + lastName + '&email=' + email + '&password=' + password)\n    .then(response => response.json())\n    .then(result => {\n      if(result['message'] === 'Success'){\n        props.setUser(result['user']);\n        props.setExpenseCategories(result['expenseCategories']);\n        props.setIncomeCategories(result['incomeCategories']);\n        props.setExpenseTransactions([])\n        props.setIncomeTransactions([])\n        props.setFilteredTransactions([], \"Expense\")\n        props.setFilteredTransactions([], \"Income\")\n        props.setPage(\"dashboard\")\n      }\n      else{\n        setMessage(result['message'])\n      }\n    })\n    .catch(e => {\n      console.log(e);\n    });\n    \n}\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(event) => setFirstName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <h6 style={{color:\"red\"}}>{message}</h6>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSignUp}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link onClick={() => props.setPage(\"login\")} variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieChart.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, {useState} from 'react';\nimport {Pie} from 'react-chartjs-2';\nimport * as constants from '../../constants'\n\nfunction PieChart(props) {\n\n  function filteredDateRangeAdjustment(){\n    var numDaysInFilteredRange = Math.ceil((Math.abs(props.endDate - props.startDate)) / (1000 * 60 * 60 * 24)) + 1;\n    if([28, 29, 30, 31].includes(numDaysInFilteredRange)) \n      return 1;\n    return numDaysInFilteredRange / (365 / 12) //Average month length\n  }\n\n  function getPieChartData(){\n    var pieLabels = [];\n    var pieData = [];\n\n    var categories = props.pieIncomeExpenseButton == 0 ? props.expenseCategories : props.incomeCategories;\n    var transactions = props.pieIncomeExpenseButton == 0 ? props.expenseTransactions : props.incomeTransactions;\n    for(var i = 0; i < categories.length; i++){\n      pieLabels.push(categories[i].CategoryName)\n      if(props.pieActualPlannedButton == 1){\n        pieData.push(categories[i].Planned * filteredDateRangeAdjustment())\n      }else if(props.pieActualPlannedButton == 0){\n        pieData.push(0)\n        for(var x = 0; x < transactions.length; x++){\n          if(transactions[x].CategoryId == categories[i].CategoryId){\n            pieData[i] += transactions[x].Amount;\n          }\n        }\n      }\n    }\n\n    var pieChartData = {\n      labels: pieLabels,\n      datasets: [\n        {\n          label: 'Categories',\n          backgroundColor: constants.colors,\n          data: pieData\n        }\n      ]\n    }\n    return pieChartData\n  }\n\n  return (\n    <div>\n        { ((props.pieIncomeExpenseButton == 0 && props.pieActualPlannedButton == 0 && props.expenseTransactions.length == 0) ||\n          (props.pieIncomeExpenseButton == 1 && props.pieActualPlannedButton == 0 && props.incomeTransactions.length == 0)) && \n          <div style={{height:235}}>\n            <br/><br/><br/>\n            <h1>No Data available</h1>\n          </div>\n        }\n        { (!((props.pieIncomeExpenseButton == 0 && props.pieActualPlannedButton == 0 && props.expenseTransactions.length == 0) ||\n          (props.pieIncomeExpenseButton == 1 && props.pieActualPlannedButton == 0 && props.incomeTransactions.length == 0))) && \n          <Pie\n            height = {270}\n            data={getPieChartData()}\n            options={{\n              animation:{duration:1000, easing:'easeInOutCubic'},\n              maintainAspectRatio:false,\n              legend:{\n                display:true,\n                position:'right'\n              },\n              tooltips: {\n                callbacks: {\n                    label: function(tooltipItem, data) {\n                        var label = data.labels[tooltipItem.index]\n                        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n                        label += ': $' + Number(value).toFixed(2);\n                        return label;\n                    }\n                }\n              }\n            }}\n          />\n        }\n       \n    </div>\n  );\n}\n\nexport default PieChart;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarChart.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/PieButtons.js",["157","158","159","160","161","162","163","164","165"],"import React, {useState} from 'react';\nimport {ButtonGroup, Button} from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nfunction PieButtons(props) {\n  const pieTitles = [\n    ['Actual Expenses By Category', 'Planned Expenses By Category', 'Actual Vs. Planned Expenses'],\n    ['Actual Income By Category', 'Planned Income By Category', 'Actual Vs. Planned Income']\n  ]\n\n  function handleClick(button, buttonNum){\n    if(button == \"IncomeExpense\"){\n      props.setPieIncomeExpenseButton(buttonNum); \n    }else if(button == \"ActualPlanned\"){\n      props.setPieActualPlannedButton(buttonNum); \n    }\n    props.setPieKey(props.pieKey + 1)\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={7}>\n        {/* <Button \n            variant=\"secondary\" \n            active={props.pieIncomeExpenseButton == 0 ? true : false} \n            onClick={() => handleClick(\"IncomeExpense\", 0)}\n            style={{float:'left'}}\n            size=\"sm\"\n          >\n            <span>\n            <SettingsIcon style={{fontSize:15, marginTop:-2}}/>{' '}\n             Edit Categories\n            </span>\n        </Button> */}\n        <br/>\n        <h5 style={{float:'left', marginTop:10, marginBottom:10}}>\n          {pieTitles[props.pieIncomeExpenseButton][props.pieActualPlannedButton]}\n        </h5>\n      </Grid>\n      <Grid item xs={5}>\n      <ButtonGroup size=\"sm\" style={{float:'right', marginBottom:2}}>\n          <Button \n            variant=\"success\" \n            active={props.pieIncomeExpenseButton == 0 ? true : false} \n            onClick={() => handleClick(\"IncomeExpense\", 0)}\n          >\n            Expenses\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieIncomeExpenseButton == 1 ? true : false} \n            onClick={() => handleClick(\"IncomeExpense\", 1)}\n          >\n            Income\n          </Button>\n        </ButtonGroup>\n        <ButtonGroup size=\"sm\" style={{float:'right'}}>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 0 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 0)}\n          >\n            Actual\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 1 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 1)}\n          >\n            Planned\n          </Button>\n          <Button \n            variant=\"success\" \n            active={props.pieActualPlannedButton == 2 ? true : false} \n            onClick={() => handleClick(\"ActualPlanned\", 2)}\n          >\n            Compared\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PieButtons;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Transactions.js",["166"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Compared.js",["167","168","169","170","171","172","173"],"import React, {useState} from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  Chart,\n  ChartTitle,\n  ChartTooltip,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartValueAxis,\n  ChartValueAxisItem\n} from '@progress/kendo-react-charts';\n\nfunction Compared(props) {\n\n  function filteredDateRangeAdjustment(){\n    var numDaysInFilteredRange = Math.ceil((Math.abs(props.endDate - props.startDate)) / (1000 * 60 * 60 * 24)) + 1;\n    if([28, 29, 30, 31].includes(numDaysInFilteredRange)) \n      return 1;\n    return numDaysInFilteredRange / (365 / 12) //Average month length\n  }\n\n  const tooltipRender = ({ point }) => {\n    const { value } = point;\n\n    return (\n      <span>\n        Planned: ${ value.target.toFixed(2) }\n        <br />\n        Actual: ${ value.current.toFixed(2) }\n        <br />\n        Diff: ${ (value.target - value.current).toFixed(2) }\n      </span>\n    )\n  };\n\n  function getActualAmount(transactions, categoryId){\n    var total = 0;\n    for(var i = 0; i < transactions.length; i++){\n      if(transactions[i].CategoryId == categoryId){\n        total += transactions[i].Amount;\n      }\n    }\n    return total;\n  }\n\n  return (\n    <div style={{height:240, overflow: 'scroll'}}>\n      {props.pieIncomeExpenseButton === 0 && props.expenseCategories.map((category) => {\n        var actualAmount = getActualAmount(props.expenseTransactions, category.CategoryId);\n        var planned = category.Planned * filteredDateRangeAdjustment()\n        var max = actualAmount < planned ? planned * 2 : ((actualAmount / planned) + 1) * planned\n        return (\n          <Chart style={{ height: 80 }}>\n            <ChartTitle text={category.CategoryName} align=\"left\"/>\n            <ChartSeries >\n                <ChartSeriesItem type=\"bullet\" color=\"#4361EE\" data={[[actualAmount, planned]]} />\n            </ChartSeries>\n            <ChartValueAxis>\n              <ChartValueAxisItem \n                majorGridLines={{ visible: false }} \n                minorTicks={{ visible: false }} \n                min={0} \n                max={max} \n                labels={{format: \"${0}\"}} \n                plotBands={[{from: 0, to: planned, color: 'lightgreen', opacity: .3}, {from: planned, to: max, color: '#FFC6FF', opacity: .2}]} \n              />\n            </ChartValueAxis>\n            <ChartTooltip render={tooltipRender} background=\"white\"/>\n          </Chart>)\n        })}\n      {props.pieIncomeExpenseButton === 1 && props.incomeCategories.map((category) => {\n        var actualAmount = getActualAmount(props.incomeTransactions, category.CategoryId);\n        var planned = category.Planned * filteredDateRangeAdjustment()\n        var max = actualAmount < planned ? planned * 2 : ((actualAmount / planned) + 1) * planned\n        return (\n          <Chart style={{ height: 80 }}>\n            <ChartTitle text={category.CategoryName} align=\"left\"/>\n            <ChartSeries >\n                <ChartSeriesItem type=\"bullet\" color=\"#4361EE\" data={[[actualAmount, planned]]} />\n            </ChartSeries>\n            <ChartValueAxis>\n              <ChartValueAxisItem \n                majorGridLines={{ visible: false }} \n                minorTicks={{ visible: false }} \n                min={0} \n                max={max} \n                labels={{format: \"${0}\"}} \n                plotBands={[{from: 0, to: planned, color: '#FFC6FF', opacity: .3}, {from: planned, to: max, color: 'lightgreen', opacity: .2}]}\n              />\n            </ChartValueAxis>\n            <ChartTooltip render={tooltipRender} background=\"white\"/>\n          </Chart>)\n        })}\n    </div>\n  );\n}\n\nexport default Compared;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Metrics.js",["174"],"import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AnimatedNumber from \"animated-number-react\";\n\nfunction Metrics(props) {\n  var formatValue = (value) => value.toFixed(2);\n\n  function filteredDateRangeAdjustment(){\n    var numDaysInFilteredRange = Math.ceil((Math.abs(props.endDate - props.startDate)) / (1000 * 60 * 60 * 24)) + 1;\n    if([28, 29, 30, 31].includes(numDaysInFilteredRange)) \n      return 1;\n    return numDaysInFilteredRange / (365 / 12) //Average month length\n  }\n\n  function getTotalSpent(){\n    var total = 0;\n    for(var i = 0; i < props.expenseTransactions.length; i++){\n      total += Number(props.expenseTransactions[i].Amount);\n    }\n    return total;\n  }\n\n  function getTotalIncome(){\n    var total = 0;\n    for(var i = 0; i < props.incomeTransactions.length; i++){\n      total += Number(props.incomeTransactions[i].Amount);\n    }\n    return total;\n  }\n  \n  function getPlannedSpending(){\n    var total = 0;\n    for(var i = 0; i < props.expenseCategories.length; i++){\n      total += Number(props.expenseCategories[i].Planned);\n    }\n    return total * filteredDateRangeAdjustment();\n  }\n\n  function getPlannedIncome(){\n    var total = 0;\n    for(var i = 0; i < props.incomeCategories.length; i++){\n      total += Number(props.incomeCategories[i].Planned);\n    }\n    return total * filteredDateRangeAdjustment();\n  }\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getPlannedIncome()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Planned Income</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>-</h2>\n      </Grid>\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getPlannedSpending()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Planned Spending</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>=</h2>\n      </Grid>\n      <Grid item xs={4}>\n        <h4>$<AnimatedNumber value={getPlannedIncome() - getPlannedSpending()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Planned Savings</h6>\n      </Grid>\n\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getTotalIncome()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Actual Income</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>-</h2>\n      </Grid>\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getTotalSpent()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Actual Spending</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>=</h2>\n      </Grid>\n      <Grid item xs={4}>\n        <h4>$<AnimatedNumber value={getTotalIncome() - getTotalSpent()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>Actually Saved</h6>\n      </Grid>\n\n      <Grid item xs={3}>\n        <h6 style={{marginTop:-10}}>------------------------</h6>\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid item xs={3}>\n        <h6 style={{marginTop:-10}}>------------------------</h6>\n      </Grid>\n      <Grid item xs={1}></Grid>\n      <Grid item xs={4}>\n        <h6 style={{marginTop:-10}}>------------------------</h6>\n      </Grid>\n\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getPlannedIncome() - getTotalIncome()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>{((getTotalIncome()/getPlannedIncome()) * 100).toFixed(2)}%</h6>\n        <h6 style={{marginTop:-10}}>Compared Income</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>-</h2>\n      </Grid>\n      <Grid item xs={3}>\n        <h4>$<AnimatedNumber value={getPlannedSpending() - getTotalSpent()} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>{((getTotalSpent()/getPlannedSpending()) * 100).toFixed(2)}%</h6>\n        <h6 style={{marginTop:-10}}>Compared Spent</h6>\n      </Grid>\n      <Grid item xs={1}>\n        <h2>=</h2>\n      </Grid>\n      <Grid item xs={4}>\n        <h4>$<AnimatedNumber value={(getPlannedIncome() - getPlannedSpending()) - (getTotalIncome() - getTotalSpent())} formatValue={formatValue} /></h4>\n        <h6 style={{marginTop:-10}}>{(((getTotalIncome() - getTotalSpent())/(getPlannedIncome() - getPlannedSpending())) * 100).toFixed(2)}%</h6>\n        <h6 style={{marginTop:-10}}>Compared Saved</h6>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Metrics;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/Settings.js",["175","176","177"],"import React, {useState} from 'react'\nimport { Modal, Nav, Button } from 'react-bootstrap'\nimport Grid from '@material-ui/core/Grid';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport * as constants from '../Constants'\n\nfunction Settings(props) {\n    const [selectedTab, setSelectedTab] = useState(\"Expense\") \n    const [selectedCategories, setSelectedCategories] = useState([])\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n\n    function handleClose(){\n        props.handleClose()\n        setSelectedTab(\"Expense\")\n    }\n\n    function addCategory(){\n        fetch(constants.url + 'AddCategories', {\n            method : \"POST\",\n            headers : {\"Content-type\" : \"application/json\"},\n            body: JSON.stringify({\n              userId : props.user['userId'],\n              categoryType : selectedTab,\n              categoriesToAdd : [{CategoryName: \"\", PlannedSpending : 0}]\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n          var categories = result['categories'];\n          if(selectedTab === 'Expense'){\n            props.setExpenseCategories(categories)\n          }\n          else if(selectedTab === 'Income'){\n            props.setIncomeCategories(categories)\n          }\n        })\n        .catch(e => {\n            console.log(e);\n        });\n      }\n\n    function deleteCategory(){\n        fetch(constants.url + 'DeleteCategories', {\n            method : \"POST\",\n            headers : {\"Content-type\" : \"application/json\"},\n            body: JSON.stringify({\n                categoryIdsToDelete : selectedCategories\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            var categories = [];\n            var oldCategories = selectedTab === 'Expense' ? props.expenseCategories : props.incomeCategories\n            for(var i = 0; i < oldCategories.length; i++){\n                var category = oldCategories[i];\n                if(!selectedCategories.includes(category.CategoryId))\n                    categories.push(category);\n            }\n            if(selectedTab === 'Expense'){\n                props.setExpenseCategories(categories)\n            }\n            else if(selectedTab === 'Income'){\n                props.setIncomeCategories(categories)\n            }\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n\n    function CheckBoxCellRenderer(params){\n        return <input   type=\"checkbox\" \n                        onChange={() => {\n                            var index = selectedCategories.indexOf(params.data.CategoryId); \n                            if(index == -1){\n                                selectedCategories.push(params.data.CategoryId);\n                            }else{\n                                selectedCategories.splice(index, 1);\n                            }\n                            setSelectedCategories(selectedCategories);\n                        }}\n                />\n    }\n\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    }\n\n    function onCellValueChanged(event){\n        fetch(constants.url + 'UpdateCategory', {\n            method : \"POST\",\n            headers : {\"Content-type\" : \"application/json\"},\n            body: JSON.stringify({\n                category : event.data\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n          var categories = selectedTab === 'Expense' ? props.expenseCategories : props.incomeCategories;\n          categories[event.rowIndex] = event.data;\n          if(selectedTab === 'Expense'){\n            props.setExpenseCategories(categories)\n          }\n          else if(selectedTab === 'Income'){\n            props.setIncomeCategories(categories)\n          }\n        })\n        .catch(e => {\n            console.log(e);\n        });\n      }\n\n\n    return (\n    <Modal show={props.show} onHide={handleClose}>\n        <Modal.Header>\n            <Modal.Title>Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Nav fill variant=\"tabs\" defaultActiveKey=\"link-1\" style={{marginBottom:15}}>\n                <Nav.Item onClick={() => setSelectedTab(\"Expense\")}>\n                    <Nav.Link eventKey=\"link-1\">Expense</Nav.Link>\n                </Nav.Item>\n                <Nav.Item onClick={() => setSelectedTab(\"Income\")}>\n                    <Nav.Link eventKey=\"link-2\">Income</Nav.Link>\n                </Nav.Item>\n                <Nav.Item onClick={() => setSelectedTab(\"Profile\")}>\n                    <Nav.Link eventKey=\"link-3\">Profile</Nav.Link>\n                </Nav.Item>\n            </Nav>\n            {(selectedTab ===\"Expense\" || selectedTab === \"Income\") && (\n                <div>\n                    <Grid container spacing={0}>\n                        <Grid item xs={6}>\n                            <h5 style={{marginTop:7}}>Categories</h5>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button variant=\"danger\" size=\"sm\" style={{float:'right'}} onClick={deleteCategory}>Delete</Button>\n                            <Button variant=\"primary\" size=\"sm\" style={{float:'right', marginRight:5}} onClick={addCategory}>Add</Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div className=\"ag-theme-alpine\" style={{ height: '100%', width: '100%' } }>\n                                <AgGridReact\n                                    rowData={selectedTab === \"Expense\" ? props.expenseCategories : props.incomeCategories}\n                                    domLayout=\"autoHeight\"\n                                    onCellValueChanged={onCellValueChanged}\n                                    onGridReady={onGridReady}\n                                    frameworkComponents={{CheckBoxCellRenderer: CheckBoxCellRenderer}}\n                                >\n                                    <AgGridColumn headerName=\"\" field=\"CategoryId\" width={50} cellRendererFramework={CheckBoxCellRenderer} ></AgGridColumn>\n                                    <AgGridColumn headerName=\"Name\" field=\"CategoryName\" editable></AgGridColumn>\n                                    <AgGridColumn headerName=\"Planned\" field=\"Planned\" valueFormatter={(params) => {return \"$\" + params.data.Planned}} editable></AgGridColumn>\n                                </AgGridReact>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}   \n            {selectedTab===\"Profile\" && (\n                <div>\n                    <h1>Profile</h1>\n                </div>\n            )}    \n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n        </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Settings;","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/constants.js",[],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/BarButtons.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, {useState} from 'react';\nimport {ButtonGroup, Button, Form} from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { DateRangePicker } from '@progress/kendo-react-dateinputs';\n\nDate.prototype.getWeek = function (dowOffset) {\n      dowOffset = typeof(dowOffset) == 'int' ? dowOffset : 0; \n      var newYear = new Date(this.getFullYear(),0,1);\n      var day = newYear.getDay() - dowOffset; \n      day = (day >= 0 ? day : day + 7);\n      var daynum = Math.floor((this.getTime() - newYear.getTime() - \n      (this.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;\n      var weeknum;\n      if(day < 4) {\n          weeknum = Math.floor((daynum+day-1)/7) + 1;\n          if(weeknum > 52) {\n              var nYear = new Date(this.getFullYear() + 1,0,1);\n              var nday = nYear.getDay() - dowOffset;\n              nday = nday >= 0 ? nday : nday + 7;\n              weeknum = nday < 4 ? 1 : 53;\n          }\n      } else { weeknum = Math.floor((daynum+day-1)/7);}\n      return weeknum;\n  };\n\nfunction BarButtons(props) {\n  const titles = [['Total Expenses', 'Expenses By Category'],['Total Income', 'Income By Category']]\n\n  function handleClick(button, buttonNum){\n    if(button == \"expenseIncome\"){\n      props.setExpenseIncomeButton(buttonNum); \n    }else if(button == \"totalCategory\"){\n      props.setTotalCategoryButton(buttonNum); \n    }\n    else if(button == \"date\"){\n      setDefaultDate(buttonNum)\n      props.setDateButton(buttonNum); \n    }\n    props.setBarKey(props.barKey + 1)\n  }\n\n  function setDefaultDate(buttonNum){\n    var today = new Date()\n    switch(buttonNum){\n      case 0:\n        var num = today.getDay() >= 1 ? 0 : 1\n        today.setDate(today.getDate()  - num)\n        setDateWeek(today.getFullYear(), today.getWeek())\n        break;\n      case 1:\n        setDateMonth(today.getFullYear(), today.getMonth())\n        break;\n      case 2:\n        setDateYear(\"Year To Date\")\n        break;\n      case 3:\n        setDateCustom(new Date(today.getFullYear(), 0, 1), today)\n        break;\n    }\n  }\n\n  function setDateWeek(year, week){\n    var days = (1 + (week - 1) * 7) + 3;\n    var newStartDate = new Date(year, 0, days);\n    var newEndDate = new Date(year, 0, days + 6)\n    props.setFilters(newStartDate, newEndDate)\n  }\n\n  function setDateMonth(year, month){\n    var newStartDate = new Date(year, month, 1)\n    var newEndDate = new Date(year, month + 1, 1)\n    newEndDate.setDate(newEndDate.getDate() - 1)\n    props.setFilters(newStartDate, newEndDate)\n  }\n\n  function setDateYear(year){\n    if(year == \"Year To Date\"){\n      var newStartDate = new Date((new Date()).getFullYear(), 0, 1)\n      var newEndDate = new Date()\n    }else{\n      var newStartDate = new Date(Number(year), 0, 1);\n      var newEndDate = new Date(Number(year) + 1, 0, 1);\n      newEndDate.setDate(newEndDate.getDate() - 1)\n    }\n    props.setFilters(newStartDate, newEndDate)\n  }\n\n  function setDateCustom(newStartDate, newEndDate){\n    props.setFilters(newStartDate, newEndDate)\n  }\n\n  function getDate(format){\n    var today = props.endDate;\n    var formattedDate = today.getFullYear().toString()\n    if(format == \"week\"){\n      formattedDate += (today.getWeek() - 1 >= 10 ? \"-W\" : \"-W0\")\n      formattedDate += (today.getWeek() - 1).toString()\n      return formattedDate\n    }else if(format == \"month\"){\n      formattedDate += (today.getMonth() + 1 >= 10 ? \"-\" : \"-0\")\n      formattedDate += (today.getMonth() + 1).toString()\n      return formattedDate\n    }else if(format == \"custom\"){\n      return { start: props.startDate, end: today }\n    }\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={9}>\n        <ButtonGroup size=\"sm\" style={{display: \"block\", float:'left', marginBottom:2}}>\n          <Button variant=\"success\" active={props.dateButton == 0 ? true : false} onClick={() => handleClick(\"date\", 0)}>Week</Button>\n          <Button variant=\"success\" active={props.dateButton == 1 ? true : false} onClick={() => handleClick(\"date\", 1)}>Month</Button>\n          <Button variant=\"success\" active={props.dateButton == 2 ? true : false} onClick={() => handleClick(\"date\", 2)}>Year</Button>\n          <Button variant=\"success\" active={props.dateButton == 3? true : false} onClick={() => handleClick(\"date\", 3)}>Custom</Button>\n        </ButtonGroup>\n        <br/><br/>\n        <div style={{display: \"block\", float:'left', height:30}}>\n          {props.dateButton == 0 && (\n            <Form.Control style={{marginTop:5, width:215}} type=\"week\" min=\"2020-W1\" max=\"2022-W1\" defaultValue ={getDate(\"week\")} onChange={(event)=>setDateWeek(Number(event.target.value.substring(0,4)), Number(event.target.value.substring(6)))}/>\n          )}\n          {props.dateButton == 1 && (\n            <Form.Control style={{marginTop:5, width:215}} type=\"month\" min=\"2020-01\" max=\"2022-01\" defaultValue ={getDate(\"month\")} onChange={(event)=>setDateMonth(Number(event.target.value.substring(0,4)), Number(event.target.value.substring(5)) - 1)}/>\n          )}\n          {props.dateButton == 2 && (\n            <Form.Control as=\"select\" style={{marginTop:5, width:215}} onChange={(event) => setDateYear(event.target.value)}>\n              <option>Year To Date</option>\n              <option>2020</option>\n              <option>2021</option>\n              <option>2022</option>\n            </Form.Control>\n          )}\n          {props.dateButton == 3 && (\n            <DateRangePicker defaultValue ={getDate(\"custom\")} onChange={(event)=> {if(event.target.value['start'] && event.target.value['end']){setDateCustom(event.target.value['start'], event.target.value['end'])}}}/>\n          )}\n        </div>\n      </Grid>\n      <Grid item xs={3}>\n        <ButtonGroup size=\"sm\" style={{float:'right', marginBottom:2}}>\n          <Button variant=\"success\" active={props.expenseIncomeButton == 0 ? true : false} onClick={() => handleClick(\"expenseIncome\", 0)}>Expenses</Button>\n          <Button variant=\"success\" active={props.expenseIncomeButton == 1 ? true : false} onClick={() => handleClick(\"expenseIncome\", 1)}>Income</Button>\n        </ButtonGroup>\n        <br/>\n        <ButtonGroup size=\"sm\" style={{float:'right'}}>\n          <Button variant=\"success\" active={props.totalCategoryButton == 0 ? true : false} onClick={() => handleClick(\"totalCategory\", 0)}>Total</Button>\n          <Button variant=\"success\" active={props.totalCategoryButton == 1 ? true : false} onClick={() => handleClick(\"totalCategory\", 1)}>By Category</Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={2}></Grid>\n      <Grid item xs={7}>\n        <h5 style={{marginTop:25}}>{titles[props.expenseIncomeButton][props.totalCategoryButton]}</h5>\n        <h5 style={{marginTop:-10, marginBottom:0}}>{props.startDate.toLocaleDateString('en-US') + \" to \" + props.endDate.toLocaleDateString('en-US')} </h5>\n      </Grid>\n      <Grid item xs={2}></Grid>\n    </Grid>        \n  );\n}\n\nexport default BarButtons;\n","/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/TransactionsGrid.js",["203","204","205","206","207","208","209","210"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/DashboardComponents/ImportTransaction.js",["211","212","213","214","215","216","217"],"/Users/josephgordon/Desktop/BudgetAppDev/BudgetReactApp/src/Components/Constants.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":60,"column":30,"nodeType":"224","messageId":"225","endLine":60,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"230","line":2,"column":17,"nodeType":"228","messageId":"229","endLine":2,"endColumn":20},{"ruleId":"226","severity":1,"message":"231","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":12},{"ruleId":"226","severity":1,"message":"232","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":22},{"ruleId":"226","severity":1,"message":"233","line":4,"column":24,"nodeType":"228","messageId":"229","endLine":4,"endColumn":35},{"ruleId":"226","severity":1,"message":"234","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":24},{"ruleId":"226","severity":1,"message":"235","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"236","line":15,"column":10,"nodeType":"228","messageId":"229","endLine":15,"endColumn":39},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":18,"column":51,"nodeType":"224","messageId":"225","endLine":18,"endColumn":53},{"ruleId":"222","severity":1,"message":"223","line":19,"column":53,"nodeType":"224","messageId":"225","endLine":19,"endColumn":55},{"ruleId":"222","severity":1,"message":"223","line":22,"column":39,"nodeType":"224","messageId":"225","endLine":22,"endColumn":41},{"ruleId":"222","severity":1,"message":"223","line":24,"column":45,"nodeType":"224","messageId":"225","endLine":24,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":27,"column":41,"nodeType":"224","messageId":"225","endLine":27,"endColumn":43},{"ruleId":"222","severity":1,"message":"223","line":49,"column":42,"nodeType":"224","messageId":"225","endLine":49,"endColumn":44},{"ruleId":"222","severity":1,"message":"223","line":49,"column":79,"nodeType":"224","messageId":"225","endLine":49,"endColumn":81},{"ruleId":"222","severity":1,"message":"223","line":49,"column":120,"nodeType":"224","messageId":"225","endLine":49,"endColumn":122},{"ruleId":"222","severity":1,"message":"223","line":50,"column":41,"nodeType":"224","messageId":"225","endLine":50,"endColumn":43},{"ruleId":"222","severity":1,"message":"223","line":50,"column":78,"nodeType":"224","messageId":"225","endLine":50,"endColumn":80},{"ruleId":"222","severity":1,"message":"223","line":50,"column":118,"nodeType":"224","messageId":"225","endLine":50,"endColumn":120},{"ruleId":"222","severity":1,"message":"223","line":56,"column":44,"nodeType":"224","messageId":"225","endLine":56,"endColumn":46},{"ruleId":"222","severity":1,"message":"223","line":56,"column":81,"nodeType":"224","messageId":"225","endLine":56,"endColumn":83},{"ruleId":"222","severity":1,"message":"223","line":56,"column":122,"nodeType":"224","messageId":"225","endLine":56,"endColumn":124},{"ruleId":"222","severity":1,"message":"223","line":57,"column":41,"nodeType":"224","messageId":"225","endLine":57,"endColumn":43},{"ruleId":"222","severity":1,"message":"223","line":57,"column":78,"nodeType":"224","messageId":"225","endLine":57,"endColumn":80},{"ruleId":"222","severity":1,"message":"223","line":57,"column":118,"nodeType":"224","messageId":"225","endLine":57,"endColumn":120},{"ruleId":"222","severity":1,"message":"223","line":15,"column":28,"nodeType":"224","messageId":"225","endLine":15,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":21,"column":13,"nodeType":"228","messageId":"239","endLine":21,"endColumn":20},{"ruleId":"222","severity":1,"message":"240","line":23,"column":18,"nodeType":"224","messageId":"225","endLine":23,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":34,"column":44,"nodeType":"224","messageId":"225","endLine":34,"endColumn":46},{"ruleId":"237","severity":1,"message":"241","line":36,"column":15,"nodeType":"228","messageId":"239","endLine":36,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":40,"column":15,"nodeType":"228","messageId":"239","endLine":40,"endColumn":22},{"ruleId":"237","severity":1,"message":"241","line":42,"column":17,"nodeType":"228","messageId":"239","endLine":42,"endColumn":18},{"ruleId":"237","severity":1,"message":"241","line":46,"column":15,"nodeType":"228","messageId":"239","endLine":46,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":47,"column":13,"nodeType":"228","messageId":"239","endLine":47,"endColumn":20},{"ruleId":"222","severity":1,"message":"240","line":49,"column":23,"nodeType":"224","messageId":"225","endLine":49,"endColumn":25},{"ruleId":"237","severity":1,"message":"241","line":54,"column":15,"nodeType":"228","messageId":"239","endLine":54,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":79,"column":28,"nodeType":"224","messageId":"225","endLine":79,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":90,"column":13,"nodeType":"228","messageId":"239","endLine":90,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":106,"column":44,"nodeType":"224","messageId":"225","endLine":106,"endColumn":46},{"ruleId":"237","severity":1,"message":"241","line":108,"column":15,"nodeType":"228","messageId":"239","endLine":108,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":112,"column":15,"nodeType":"228","messageId":"239","endLine":112,"endColumn":22},{"ruleId":"237","severity":1,"message":"242","line":113,"column":13,"nodeType":"228","messageId":"239","endLine":113,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":118,"column":17,"nodeType":"228","messageId":"239","endLine":118,"endColumn":18},{"ruleId":"237","severity":1,"message":"241","line":123,"column":15,"nodeType":"228","messageId":"239","endLine":123,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":124,"column":13,"nodeType":"228","messageId":"239","endLine":124,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":125,"column":17,"nodeType":"228","messageId":"239","endLine":125,"endColumn":22},{"ruleId":"237","severity":1,"message":"241","line":133,"column":15,"nodeType":"228","messageId":"239","endLine":133,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":154,"column":28,"nodeType":"224","messageId":"225","endLine":154,"endColumn":30},{"ruleId":"222","severity":1,"message":"223","line":165,"column":30,"nodeType":"224","messageId":"225","endLine":165,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":175,"column":13,"nodeType":"228","messageId":"239","endLine":175,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":191,"column":44,"nodeType":"224","messageId":"225","endLine":191,"endColumn":46},{"ruleId":"237","severity":1,"message":"241","line":193,"column":15,"nodeType":"228","messageId":"239","endLine":193,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":197,"column":15,"nodeType":"228","messageId":"239","endLine":197,"endColumn":22},{"ruleId":"237","severity":1,"message":"242","line":198,"column":13,"nodeType":"228","messageId":"239","endLine":198,"endColumn":21},{"ruleId":"237","severity":1,"message":"244","line":200,"column":13,"nodeType":"228","messageId":"239","endLine":200,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":205,"column":30,"nodeType":"224","messageId":"225","endLine":205,"endColumn":32},{"ruleId":"237","severity":1,"message":"241","line":210,"column":17,"nodeType":"228","messageId":"239","endLine":210,"endColumn":18},{"ruleId":"237","severity":1,"message":"241","line":215,"column":15,"nodeType":"228","messageId":"239","endLine":215,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":216,"column":13,"nodeType":"228","messageId":"239","endLine":216,"endColumn":20},{"ruleId":"237","severity":1,"message":"243","line":217,"column":17,"nodeType":"228","messageId":"239","endLine":217,"endColumn":22},{"ruleId":"237","severity":1,"message":"241","line":225,"column":15,"nodeType":"228","messageId":"239","endLine":225,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":242,"column":44,"nodeType":"224","messageId":"225","endLine":242,"endColumn":46},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"245","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":13,"column":15,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":15,"column":21,"nodeType":"224","messageId":"225","endLine":15,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":45,"column":50,"nodeType":"224","messageId":"225","endLine":45,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":52,"column":50,"nodeType":"224","messageId":"225","endLine":52,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":61,"column":50,"nodeType":"224","messageId":"225","endLine":61,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":68,"column":50,"nodeType":"224","messageId":"225","endLine":68,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":75,"column":50,"nodeType":"224","messageId":"225","endLine":75,"endColumn":52},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"246","line":2,"column":13,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"226","severity":1,"message":"247","line":9,"column":3,"nodeType":"228","messageId":"229","endLine":9,"endColumn":20},{"ruleId":"226","severity":1,"message":"248","line":10,"column":3,"nodeType":"228","messageId":"229","endLine":10,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":41,"column":37,"nodeType":"224","messageId":"225","endLine":41,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":66,"column":34,"nodeType":"251","messageId":"252","endLine":66,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":89,"column":34,"nodeType":"251","messageId":"252","endLine":89,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"253","line":12,"column":12,"nodeType":"228","messageId":"229","endLine":12,"endColumn":19},{"ruleId":"226","severity":1,"message":"254","line":13,"column":12,"nodeType":"228","messageId":"229","endLine":13,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":78,"column":38,"nodeType":"224","messageId":"225","endLine":78,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":6,"column":1,"nodeType":"257","messageId":"225","endLine":24,"endColumn":4},{"ruleId":"258","severity":1,"message":"259","line":7,"column":40,"nodeType":"251","messageId":"260","endLine":7,"endColumn":45},{"ruleId":"222","severity":1,"message":"223","line":30,"column":15,"nodeType":"224","messageId":"225","endLine":30,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":32,"column":21,"nodeType":"224","messageId":"225","endLine":32,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":35,"column":20,"nodeType":"224","messageId":"225","endLine":35,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":44,"column":5,"nodeType":"263","messageId":"264","endLine":59,"endColumn":6},{"ruleId":"222","severity":1,"message":"223","line":77,"column":13,"nodeType":"224","messageId":"225","endLine":77,"endColumn":15},{"ruleId":"237","severity":1,"message":"265","line":81,"column":11,"nodeType":"228","messageId":"239","endLine":81,"endColumn":23},{"ruleId":"237","severity":1,"message":"266","line":82,"column":11,"nodeType":"228","messageId":"239","endLine":82,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":95,"column":15,"nodeType":"224","messageId":"225","endLine":95,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":99,"column":21,"nodeType":"224","messageId":"225","endLine":99,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":103,"column":21,"nodeType":"224","messageId":"225","endLine":103,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":112,"column":62,"nodeType":"224","messageId":"225","endLine":112,"endColumn":64},{"ruleId":"222","severity":1,"message":"223","line":113,"column":62,"nodeType":"224","messageId":"225","endLine":113,"endColumn":64},{"ruleId":"222","severity":1,"message":"223","line":114,"column":62,"nodeType":"224","messageId":"225","endLine":114,"endColumn":64},{"ruleId":"222","severity":1,"message":"223","line":115,"column":62,"nodeType":"224","messageId":"225","endLine":115,"endColumn":64},{"ruleId":"222","severity":1,"message":"223","line":119,"column":29,"nodeType":"224","messageId":"225","endLine":119,"endColumn":31},{"ruleId":"222","severity":1,"message":"223","line":122,"column":29,"nodeType":"224","messageId":"225","endLine":122,"endColumn":31},{"ruleId":"222","severity":1,"message":"223","line":125,"column":29,"nodeType":"224","messageId":"225","endLine":125,"endColumn":31},{"ruleId":"222","severity":1,"message":"223","line":133,"column":29,"nodeType":"224","messageId":"225","endLine":133,"endColumn":31},{"ruleId":"222","severity":1,"message":"223","line":140,"column":71,"nodeType":"224","messageId":"225","endLine":140,"endColumn":73},{"ruleId":"222","severity":1,"message":"223","line":141,"column":71,"nodeType":"224","messageId":"225","endLine":141,"endColumn":73},{"ruleId":"222","severity":1,"message":"223","line":145,"column":71,"nodeType":"224","messageId":"225","endLine":145,"endColumn":73},{"ruleId":"222","severity":1,"message":"223","line":146,"column":71,"nodeType":"224","messageId":"225","endLine":146,"endColumn":73},{"ruleId":"226","severity":1,"message":"267","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":17},{"ruleId":"226","severity":1,"message":"253","line":12,"column":10,"nodeType":"228","messageId":"229","endLine":12,"endColumn":17},{"ruleId":"226","severity":1,"message":"254","line":13,"column":10,"nodeType":"228","messageId":"229","endLine":13,"endColumn":23},{"ruleId":"237","severity":1,"message":"241","line":28,"column":13,"nodeType":"228","messageId":"239","endLine":28,"endColumn":14},{"ruleId":"222","severity":1,"message":"223","line":56,"column":32,"nodeType":"224","messageId":"225","endLine":56,"endColumn":34},{"ruleId":"222","severity":1,"message":"223","line":86,"column":36,"nodeType":"224","messageId":"225","endLine":86,"endColumn":38},{"ruleId":"222","severity":1,"message":"223","line":147,"column":34,"nodeType":"224","messageId":"225","endLine":147,"endColumn":36},{"ruleId":"222","severity":1,"message":"223","line":158,"column":32,"nodeType":"224","messageId":"225","endLine":158,"endColumn":34},{"ruleId":"226","severity":1,"message":"230","line":3,"column":17,"nodeType":"228","messageId":"229","endLine":3,"endColumn":20},{"ruleId":"226","severity":1,"message":"268","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":20},{"ruleId":"226","severity":1,"message":"269","line":14,"column":12,"nodeType":"228","messageId":"229","endLine":14,"endColumn":16},{"ruleId":"226","severity":1,"message":"270","line":14,"column":18,"nodeType":"228","messageId":"229","endLine":14,"endColumn":25},{"ruleId":"226","severity":1,"message":"253","line":15,"column":12,"nodeType":"228","messageId":"229","endLine":15,"endColumn":19},{"ruleId":"226","severity":1,"message":"254","line":16,"column":12,"nodeType":"228","messageId":"229","endLine":16,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":49,"column":42,"nodeType":"224","messageId":"225","endLine":49,"endColumn":44},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Grid' is defined but never used.","'AgGridColumn' is defined but never used.","'AgGridReact' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'SentimentDissatisfiedOutlined' is defined but never used.","no-redeclare","'curDate' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'i' is already defined.","'nextDate' is already defined.","'index' is already defined.","'isLastDate' is already defined.","'SettingsIcon' is defined but never used.","'ReactDOM' is defined but never used.","'ChartCategoryAxis' is defined but never used.","'ChartCategoryAxisItem' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'gridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","valid-typeof","Invalid typeof comparison value.","invalidValue","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'newStartDate' is already defined.","'newEndDate' is already defined.","'GridApi' is defined but never used.","'readXlsxFile' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]